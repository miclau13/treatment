{"version":3,"sources":["components/ImportData.jsx","components/ImportDataCard.jsx","components/Search.jsx","components/SearchCard.jsx","components/Treatment.jsx","components/TreatmentCard.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","alignItems","marginBottom","justifyContent","input","marginLeft","spacing","flex","button","ImportData","React","forwardRef","props","ref","onSubmit","classes","Paper","component","className","TextField","name","type","inputRef","Button","color","variant","aria-label","width","table","maxHeight","ImportDataCard","useState","loading","setLoading","fileInputRef","useRef","e","a","preventDefault","formData","FormData","append","current","files","axios","post","headers","responseType","response","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","Card","CardContent","CircularProgress","height","iconButton","Search","onChange","InputBase","autoFocus","placeholder","inputProps","IconButton","dataTypeMap","Map","dataGenderMap","dataColorMap","blue","pink","SearchCard","setData","setInput","get","result","target","value","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","gender","origin","_type","_gender","_color","key","id","style","backgroundColor","scope","label","Treatment","TreatmentCard","App","basename","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7d49a0b2.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 8,\n    justifyContent: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  button: {\n    marginLeft: 10,\n  },\n}));\n\nconst ImportData = React.forwardRef((props, ref) => {\n  const { onSubmit } = props;\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={onSubmit}>\n      <TextField\n        name=\"upload-file\"\n        type=\"file\"\n        inputRef={ref}\n      />\n      <Button \n        className={classes.button} \n        color=\"primary\"\n        variant=\"contained\" \n        aria-label=\"upload\"\n        type=\"submit\"\n      >\n        Import\n      </Button>\n    </Paper>\n  );\n} )\nexport default ImportData","import axios from 'axios';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ImportData from './ImportData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '70vw',\n  },\n  table: {\n    maxHeight: '50vh'\n  }\n}));\n\n\nexport default function ImportDataCard() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const fileInputRef = React.useRef(null);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"file\", fileInputRef.current.files[0]);\n    setLoading(true);\n    const response = await axios.post(`/import_data`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      responseType: 'blob'\n    });  \n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'import_after_treatment.csv');\n    document.body.appendChild(link);\n    link.click();\n    setLoading(false);\n  };\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <ImportData onSubmit={onSubmit} ref={fileInputRef}/>\n        {loading ?  \n          <CircularProgress height={300}/> :\n            null\n        }\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nexport default function Search(props) {\n  const { onSubmit, onChange } = props;\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={onSubmit}>\n      <InputBase\n        autoFocus\n        onChange={onChange}\n        className={classes.input}\n        placeholder=\"First name\"\n        inputProps={{ 'aria-label': 'first-name' }}\n      />\n      <IconButton \n        className={classes.iconButton} \n        aria-label=\"search\"\n        type=\"submit\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}","import axios from 'axios';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\n\nimport Search from './Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '70vw',\n  },\n  table: {\n    maxHeight: '50vh'\n  }\n}));\n\nconst dataTypeMap = new Map([\n  [1, \"masculine\"],\n  [2, \"feminine\"],\n  [0, \"ambiguous\"]\n])\nconst dataGenderMap = new Map([\n  [1, \"male\"],\n  [2, \"female\"]\n])\nconst dataColorMap = new Map([\n  [1, blue[500]],\n  [2, pink[200]]\n])\n\nexport default function SearchCard() {\n  const classes = useStyles();\n  const [data, setData] = React.useState([]);\n  const [input, setInput] = React.useState();\n  const [loading, setLoading] = React.useState(false);\n  const onChange = (e) => {\n    setInput(e.target.value);\n  }\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const result = await axios.get(`/users?firstname=${input}`);\n    setLoading(false);\n    setData(result.data) \n  };\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Search onSubmit={onSubmit} onChange={onChange} />\n        {loading ?  \n          <CircularProgress height={300}/> :\n          <TableContainer className={classes.table}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell align=\"right\">Type</TableCell>\n                  <TableCell align=\"right\">Priority gender</TableCell>\n                  <TableCell align=\"right\">Origin</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map(row => {\n                  const { type, gender, origin } = row;\n                  const _type = dataTypeMap.get(type);\n                  const _gender = dataGenderMap.get(gender);\n                  const _color = dataColorMap.get(type);\n                  return(\n                    <TableRow key={row.id} style={{ backgroundColor: _color }}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.label}\n                      </TableCell>\n                      <TableCell align=\"right\">{_type}</TableCell>\n                      <TableCell align=\"right\">{_gender}</TableCell>\n                      <TableCell align=\"right\">{origin}</TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>    \n        }\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 8,\n    justifyContent: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  button: {\n    marginLeft: 10,\n  },\n}));\n\nconst Treatment = React.forwardRef((props, ref) => {\n  const { onSubmit } = props;\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root} onSubmit={onSubmit}>\n      <TextField\n        name=\"upload-file\"\n        type=\"file\"\n        inputRef={ref}\n      />\n      <Button \n        className={classes.button} \n        color=\"primary\"\n        variant=\"contained\" \n        aria-label=\"upload\"\n        type=\"submit\"\n      >\n        Validate\n      </Button>\n    </Paper>\n  );\n} )\nexport default Treatment","import axios from 'axios';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport pink from '@material-ui/core/colors/pink';\nimport blue from '@material-ui/core/colors/blue';\n\nimport Treatment from './Treatment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '70vw',\n  },\n  table: {\n    maxHeight: '50vh'\n  }\n}));\n\n\nexport default function TreatmentCard() {\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const fileInputRef = React.useRef(null);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"file\", fileInputRef.current.files[0]);\n    setLoading(true);\n    const response = await axios.post(`/upload_file`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      responseType: 'blob'\n    });  \n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'export.csv');\n    document.body.appendChild(link);\n    link.click();\n    setLoading(false);\n  };\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Treatment onSubmit={onSubmit} ref={fileInputRef}/>\n        {loading ?  \n          <CircularProgress height={300}/> :\n            null\n        }\n      </CardContent>\n    </Card>\n  );\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport ImportDataCard from './components/ImportDataCard';\nimport SearchCard from './components/SearchCard';\nimport TreatmentCard from './components/TreatmentCard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={'/frontend'}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/search\">\n            <SearchCard />\n          </Route>\n          <Route path=\"/treatment\">\n            <TreatmentCard />\n          </Route>\n          <Route path=\"/import_data\">\n            <ImportDataCard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}